name: "Verify Release"

on:
  workflow_dispatch:
    inputs:
      providerVersion:
        description: "The version of the provider to verify"
        required: true
        type: string
      enableMacRunner:
        description: "Enable the MacOS runner in addition to Linux and Windows. Defaults to 'false'."
        required: false
        type: boolean
      skipGoSdk:
        description: "Skip the Go SDK verification. Defaults to 'false'. Enable this when verifying a pre-release for which we don't publish the Go SDK (for PRs and the default branch)."
        required: false
        type: boolean
        default: false
      pythonVersion:
        description: "Optional python SDK version to verify. Defaults to inputs.providerVersion."
        type: string
        required: false
  workflow_call:
    inputs:
      providerVersion:
        description: "The version of the provider to verify"
        required: true
        type: string
      skipGoSdk:
        description: "Skip the Go SDK verification. Defaults to 'false'. This is used when we're not publishing a Go SDK on the default branch build."
        required: false
        type: boolean
        default: false
      pythonVersion:
        description: "Optional python SDK version to verify. Defaults to inputs.providerVersion."
        type: string
        required: false

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_UPLOAD_ROLE_ARN: ${{ secrets.AWS_UPLOAD_ROLE_ARN }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  JAVA_SIGNING_KEY: ${{ secrets.JAVA_SIGNING_KEY }}
  JAVA_SIGNING_KEY_ID: ${{ secrets.JAVA_SIGNING_KEY_ID }}
  JAVA_SIGNING_PASSWORD: ${{ secrets.JAVA_SIGNING_PASSWORD }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  PULUMI_API: https://api.pulumi-staging.io
  PULUMI_BOT_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
  RELEASE_BOT_ENDPOINT: ${{ secrets.RELEASE_BOT_ENDPOINT }}
  RELEASE_BOT_KEY: ${{ secrets.RELEASE_BOT_KEY }}
  TF_APPEND_USER_AGENT: pulumi

jobs:
  verify-release:
    name: verify-release
    # We don't have any release verification configurations, so we never run this workflow.
    # Configure your .ci-mgmt.yaml files to include the release verification configurations e.g.
    # releaseVerification:
    #   nodejs: path/to/nodejs/project
    #   python: path/to/python/project
    #   dotnet: path/to/dotnet/project
    #   go: path/to/go/project
    if: false
    strategy:
      matrix:
        # We don't have any release verification configurations, so we only run on Linux to print warnings to help users configure the release verification.
        runner: ["ubuntu-latest"]
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Configure Git to checkout files with long names
        run: git config --global core.longpaths true
      - name: Checkout Repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false      
      - id: esc-secrets
        name: Map environment to ESC outputs
        uses: ./.github/actions/esc-action
      - name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: 3.11.8
      - name: Setup DotNet
        uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5.0.0
        with:
          dotnet-version: 8.0.x
      - name: Setup Node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5
        with:
          node-version: 20.x
          registry-url: https://registry.npmjs.org
      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: "1.21.x"
          cache-dependency-path: |
            provider/*.sum
            upstream/*.sum
            sdk/go/*.sum
            sdk/*.sum
            *.sum
          cache: true
      - name: Install Pulumi CLI
        uses: pulumi/actions@cc7494be991dba0978f7ffafaf995b0449a0998e # v6
        with:
          pulumi-version: "dev"
